// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: detail.capnp

#include "detail.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<65> b_d948fece9a10397b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    123,  57,  16, 154, 206, 254,  72, 217,
     13,   0,   0,   0,   1,   0,   2,   0,
    161,  79,  39,  20, 212, 148,  33, 181,
      1,   0,   7,   0,   0,   0,   3,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 116,  97, 105, 108,  46,  99,
     97, 112, 110, 112,  58,  84, 105, 109,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
    117, 110, 100, 101, 102, 105, 110, 101,
    100,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 109, 101, 115, 116,  97, 109,
    112,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 111, 114, 109,  97, 116, 116, 101,
    100,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d948fece9a10397b = b_d948fece9a10397b.words;
#if !CAPNP_LITE
static const uint16_t m_d948fece9a10397b[] = {2, 1, 0};
static const uint16_t i_d948fece9a10397b[] = {0, 1, 2};
const ::capnp::_::RawSchema s_d948fece9a10397b = {
  0xd948fece9a10397b, b_d948fece9a10397b.words, 65, nullptr, m_d948fece9a10397b,
  0, 3, i_d948fece9a10397b, nullptr, nullptr, { &s_d948fece9a10397b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<78> b_8a0dea9ddf045d96 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    150,  93,   4, 223, 157, 234,  13, 138,
     13,   0,   0,   0,   1,   0,   3,   0,
    161,  79,  39,  20, 212, 148,  33, 181,
      1,   0,   7,   0,   0,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 116,  97, 105, 108,  46,  99,
     97, 112, 110, 112,  58,  85,  85,  73,
     68,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      3,   0, 252, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    250,  42, 227, 142, 111, 224,  68, 140,
    137,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 110, 100, 101, 102, 105, 110, 101,
    100,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 110,  98, 111, 117, 110, 100, 101,
    100,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 121, 116, 101,  97, 114, 114,  97,
    121,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 110, 103, 119, 111, 114, 100,
    115,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8a0dea9ddf045d96 = b_8a0dea9ddf045d96.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8a0dea9ddf045d96[] = {
  &s_8c44e06f8ee32afa,
};
static const uint16_t m_8a0dea9ddf045d96[] = {2, 3, 1, 0};
static const uint16_t i_8a0dea9ddf045d96[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_8a0dea9ddf045d96 = {
  0x8a0dea9ddf045d96, b_8a0dea9ddf045d96.words, 78, d_8a0dea9ddf045d96, m_8a0dea9ddf045d96,
  1, 4, i_8a0dea9ddf045d96, nullptr, nullptr, { &s_8a0dea9ddf045d96, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_8c44e06f8ee32afa = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    250,  42, 227, 142, 111, 224,  68, 140,
     18,   0,   0,   0,   1,   0,   3,   0,
    150,  93,   4, 223, 157, 234,  13, 138,
      1,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 116,  97, 105, 108,  46,  99,
     97, 112, 110, 112,  58,  85,  85,  73,
     68,  46, 108, 111, 110, 103, 119, 111,
    114, 100, 115,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    104, 105,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8c44e06f8ee32afa = b_8c44e06f8ee32afa.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8c44e06f8ee32afa[] = {
  &s_8a0dea9ddf045d96,
};
static const uint16_t m_8c44e06f8ee32afa[] = {0, 1};
static const uint16_t i_8c44e06f8ee32afa[] = {0, 1};
const ::capnp::_::RawSchema s_8c44e06f8ee32afa = {
  0x8c44e06f8ee32afa, b_8c44e06f8ee32afa.words, 47, d_8c44e06f8ee32afa, m_8c44e06f8ee32afa,
  1, 2, i_8c44e06f8ee32afa, nullptr, nullptr, { &s_8c44e06f8ee32afa, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_ba2955a37aa6d9b0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    176, 217, 166, 122, 163,  85,  41, 186,
     13,   0,   0,   0,   1,   0,   0,   0,
    161,  79,  39,  20, 212, 148,  33, 181,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 146,   0,   0,   0,
     29,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  23,   0,   0,   0,
    100, 101, 116,  97, 105, 108,  46,  99,
     97, 112, 110, 112,  58,  77,  97, 112,
     84,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    146, 137,  13, 187, 209, 119,  34, 164,
      1,   0,   0,   0,  42,   0,   0,   0,
     80,  97, 105, 114,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    101, 110, 116, 114, 105, 101, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    146, 137,  13, 187, 209, 119,  34, 164,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    176, 217, 166, 122, 163,  85,  41, 186,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   1,   0,
      5,   0,   0,   0,  18,   0,   0,   0,
      5,   0,   0,   0,  18,   0,   0,   0,
     75,   0,   0,   0,   0,   0,   0,   0,
     84,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ba2955a37aa6d9b0 = b_ba2955a37aa6d9b0.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ba2955a37aa6d9b0[] = {
  &s_a42277d1bb0d8992,
};
static const uint16_t m_ba2955a37aa6d9b0[] = {0};
static const uint16_t i_ba2955a37aa6d9b0[] = {0};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_ba2955a37aa6d9b0[] = {
  { 16777216,  ::tmi::MapT< ::capnp::AnyPointer,  ::capnp::AnyPointer>::Pair::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_ba2955a37aa6d9b0 = {
  0xba2955a37aa6d9b0, b_ba2955a37aa6d9b0.words, 49, d_ba2955a37aa6d9b0, m_ba2955a37aa6d9b0,
  1, 1, i_ba2955a37aa6d9b0, nullptr, nullptr, { &s_ba2955a37aa6d9b0, nullptr, bd_ba2955a37aa6d9b0, 0, sizeof(bd_ba2955a37aa6d9b0) / sizeof(bd_ba2955a37aa6d9b0[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<56> b_a42277d1bb0d8992 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    146, 137,  13, 187, 209, 119,  34, 164,
     18,   0,   0,   0,   1,   0,   1,   0,
    176, 217, 166, 122, 163,  85,  41, 186,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 186,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 116,  97, 105, 108,  46,  99,
     97, 112, 110, 112,  58,  77,  97, 112,
     84,  46,  80,  97, 105, 114,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    119,  17, 134, 195, 196, 170, 130, 234,
     77,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    176, 217, 166, 122, 163,  85,  41, 186,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   1,   0,   0,   0,   0,   0,
    176, 217, 166, 122, 163,  85,  41, 186,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 101, 120, 116,  72, 105, 110, 116,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a42277d1bb0d8992 = b_a42277d1bb0d8992.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a42277d1bb0d8992[] = {
  &s_ea82aac4c3861177,
};
static const uint16_t m_a42277d1bb0d8992[] = {0, 2, 1};
static const uint16_t i_a42277d1bb0d8992[] = {0, 1, 2};
const ::capnp::_::RawSchema s_a42277d1bb0d8992 = {
  0xa42277d1bb0d8992, b_a42277d1bb0d8992.words, 56, d_a42277d1bb0d8992, m_a42277d1bb0d8992,
  1, 3, i_a42277d1bb0d8992, nullptr, nullptr, { &s_a42277d1bb0d8992, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_ea82aac4c3861177 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    119,  17, 134, 195, 196, 170, 130, 234,
     23,   0,   0,   0,   1,   0,   1,   0,
    146, 137,  13, 187, 209, 119,  34, 164,
      3,   0,   7,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 116,  97, 105, 108,  46,  99,
     97, 112, 110, 112,  58,  77,  97, 112,
     84,  46,  80,  97, 105, 114,  46, 110,
    101, 120, 116,  72, 105, 110, 116,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    117, 110, 100, 101, 102, 105, 110, 101,
    100,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 102, 101, 114, 101, 110,  99,
    101,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ea82aac4c3861177 = b_ea82aac4c3861177.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ea82aac4c3861177[] = {
  &s_a42277d1bb0d8992,
};
static const uint16_t m_ea82aac4c3861177[] = {1, 0};
static const uint16_t i_ea82aac4c3861177[] = {0, 1};
const ::capnp::_::RawSchema s_ea82aac4c3861177 = {
  0xea82aac4c3861177, b_ea82aac4c3861177.words, 49, d_ea82aac4c3861177, m_ea82aac4c3861177,
  1, 2, i_ea82aac4c3861177, nullptr, nullptr, { &s_ea82aac4c3861177, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace tmi {

// Time
constexpr uint16_t Time::_capnpPrivate::dataWordSize;
constexpr uint16_t Time::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Time::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Time::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// UUID
constexpr uint16_t UUID::_capnpPrivate::dataWordSize;
constexpr uint16_t UUID::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind UUID::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* UUID::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// UUID::Longwords
constexpr uint16_t UUID::Longwords::_capnpPrivate::dataWordSize;
constexpr uint16_t UUID::Longwords::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind UUID::Longwords::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* UUID::Longwords::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace

